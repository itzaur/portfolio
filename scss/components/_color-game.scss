.color-game {
  --gap: 1rem;

  grid-column: 2;
  grid-row: 2 / -1;
  align-self: end;
  // align-self: center;

  @include flex(column, center, null);

  // @media (max-width: 19.999em) {
  //   margin-top: 45vh;
  // }

  @include respond-to('320->') {
    --gap: 2rem;
    @include flex(row, flex-start, null);
    align-self: flex-end;
    grid-column: 2 / span 5;
  }

  @include respond-to('568->') {
    flex-direction: column;
    margin-bottom: 2vw;
  }

  & > * {
    @include flex(null, center, center);
    position: relative;

    width: 3.5rem;
    aspect-ratio: 1;

    // background: radial-gradient(
    //   circle,
    //   HSL(var(--primary-hs) 100%),
    //   HSL(var(--primary-hs) 80%)
    // );

    background-color: HSL(var(--primary-hs) 100%);
    // background-image: radial-gradient(
    //   circle at 35% 35%,
    //   rgba(255, 255, 255, 0.8),
    //   rgba(255, 255, 255, 0) 22%,
    //   rgba(0, 0, 0, 0) 22%,
    //   rgba(0, 0, 0, 0.8) 65%,
    //   rgba(0, 0, 0, 0.2) 80%
    // );
    box-shadow: 0 10px 10px HSL(var(--primary-hs) 0% / 0.3);

    border-radius: 50%;

    cursor: pointer;

    @include respond-to('320->') {
      width: 5rem;
    }
  }

  &__item {
    & div {
      @include flex(null, center, center);
      @include abs-center;

      width: 8rem;
      height: 4rem;
      padding: 0.5rem 0.8rem;
      border-radius: 1rem;
      background-color: HSL(var(--primary-hs) 100%);
      box-shadow: 0 10px 10px HSL(var(--primary-hs) 0% / 0.2);
      opacity: 0;
      pointer-events: none;
      // overflow: hidden;
      transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);

      & img {
        height: 100%;
      }

      @media (min-width: 320px) and (max-width: 568px) {
        @include abs-center;
      }

      &::before {
        content: '';
        position: absolute;
        width: 1rem;
        height: 1rem;
        top: 50%;
        left: -5px;
        transform: translate(0, -50%) rotate(45deg);
        background-color: HSL(var(--primary-hs) 100%);
        transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);

        @media (min-width: 320px) and (max-width: 567px) {
          top: calc(100% - 0.5rem);
          // bottom: 0rem;
          left: 50%;
          transform: translate(-50%, 0) rotate(45deg);
        }
      }
    }

    &:hover div {
      transform: translate(clamp(3rem, 6vw, 5rem), -50%);
      opacity: 1;
      pointer-events: auto;

      @media (min-width: 320px) and (max-width: 567px) {
        transform: translate(-50%, -8rem);
      }
    }
  }
}
